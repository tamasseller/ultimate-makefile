CPUS ?= $(shell nproc || echo 1)
MAKEFLAGS += -j -l $((CPUS+1))

OBJDIR = .o

LIBFLAGS = $(addprefix -l, $(LIBS))
LIBDIRFLAGS = $(addprefix -L, $(LIB_DIRS))
INCDIRFLAGS = $(addprefix -I, $(INCLUDE_DIRS))

DEPFLAGS = -MT $@ -MMD -MP -MF $(OBJDIR)/$*.Td

CC += $(DEPFLAGS) $(CFLAGS) $(INCDIRFLAGS)
CXX += $(DEPFLAGS) $(CXXFLAGS) $(INCDIRFLAGS)

ifdef RESOURCES
LDFLAGS += --accept-unknown-input-arch
endif


ABS_SOURCES = $(abspath $(SOURCES))
ABS_RESOURCES = $(abspath $(RESOURCES))

OBJS += $(addsuffix .o, $(ABS_SOURCES))
OBJS += $(addsuffix .res.o, $(ABS_RESOURCES))

$(OUTPUT): $(addprefix $(OBJDIR)/, $(OBJS))
	@printf 'Linking \e[1;36m$(notdir $@)\e[0m\n'
	@$(LD) $^ $(LDFLAGS) $(LIBFLAGS) $(LIBDIRFLAGS) -o $@


$(OBJDIR)/%.c.o: %.c $(MAKEFILE_LIST)
$(OBJDIR)/%.c.o: %.c $(OBJDIR)/%.d $(MAKEFILE_LIST)
	@printf 'Compiling \e[1;33m$(notdir $<)\e[0m\n'
	@mkdir -p $(dir $@)
	@$(CC) -c -o $@ $<
	@mv -f $(OBJDIR)/$*.Td $(OBJDIR)/$*.d

$(OBJDIR)/%.cpp.o: %.cpp $(MAKEFILE_LIST)
$(OBJDIR)/%.cpp.o: %.cpp $(OBJDIR)/%.d $(MAKEFILE_LIST)
	@printf 'Compiling \e[1;33m$(notdir $<)\e[0m\n'
	@mkdir -p $(dir $@)
	@$(CXX) -c -o $@ $<
	@mv -f $(OBJDIR)/$*.Td $(OBJDIR)/$*.d

$(OBJDIR)/%.res.o:: % $(MAKEFILE_LIST)
	@printf 'Objectifying \e[1;33m$(notdir $<)\e[0m\n'
	@mkdir -p $(dir $@)
	@cd $(dir $<) && \
	$(OBJCOPY) --rename-section .data=.rodata,alloc,load,readonly,data,contents -I binary -O elf32-little $(notdir $<) $(abspath $@); \
	cd $$OLDPWD

$(OBJDIR)/%.d: ;
.PRECIOUS: $(OBJDIR)/%.d


.SUFFIXES:
	MAKEFLAGS += -r
	
clean:
	rm -rf $(OUTPUT) $(OBJDIR) $(CLEAN_EXTRA)

-include $(patsubst %,$(OBJDIR)/%.d,$(basename $(ABS_SOURCES)))

